
# Get authentication credentials
source ./auth.sh

# Add Openstack repository
sudo add-apt-repository cloud-archive:caracal

### Install Openstack Python client ###
sudo apt install python3-openstackclient -y

### Install and configure keystone ###

# Install MySQL
sudo apt install mariadb-server -y

# Create keystone database and user
echo "

# Install keystone
echo "DROP DATABASE IF EXISTS $KEYSTONE_DB; CREATE DATABASE $KEYSTONE_DB; GRANT ALL PRIVILEGES ON $KEYSTONE_DB.* TO '$KEYSTONE_DBUSER'@'localhost' IDENTIFIED BY '$KEYSTONE_DBPASS'; GRANT ALL PRIVILEGES ON $KEYSTONE_DB.* TO '$KEYSTONE_DBUSER'@'%' IDENTIFIED BY '$KEYSTONE_DBPASS';" | sudo mysql -u root

# Install keystone package
sudo apt install keystone -y

# Back up the original configuration file if backup doesn't exist
if [ ! -f /etc/keystone/keystone.conf.bak ]; then
    cp /etc/keystone/keystone.conf /etc/keystone/keystone.conf.bak
fi

# Update configuration for database authentication and token provider

### Hacky hacky hacky ###
sed -i -e "s|^connection\s=\ssqlite.*|connection = mysql+pymysql://$KEYSTONE_DBUSER:${KEYSTONE_DBPASS//&/\\&}@localhost/$KEYSTONE_DB|" \
       -e 's/^#provider = fernet/provider = fernet/' /etc/keystone/keystone.conf
###  I think this is the correct command but for some reason it is requiring localhost instead of the hostname...weird, I'll check this out later ###
# sed -i -e "s|^connection\s=\ssqlite.*|connection = mysql+pymysql://$KEYSTONE_DBUSER:${KEYSTONE_DBPASS//&/\\&}@$HOSTNAME/$KEYSTONE_DB|" \
       -e 's/^#provider = fernet/provider = fernet/' /etc/keystone/keystone.conf

# Populate the keystone database
sudo su -s /bin/sh -c "keystone-manage db_sync" $KEYSTONE_DB

# Initialize Fernet key repositories
keystone-manage fernet_setup --keystone-user $KEYSTONE_USER --keystone-group $KEYSTONE_GROUP
keystone-manage credential_setup --keystone-user $KEYSTONE_USER --keystone-group $KEYSTONE_GROUP

# Bootstrap the keystone service
keystone-manage bootstrap --bootstrap-password $KEYSTONE_ADMIN_PASS \
  --bootstrap-admin-url http://$HOSTNAME:5000/v3/ \
  --bootstrap-internal-url http://$HOSTNAME:5000/v3/ \
  --bootstrap-public-url http://$HOSTNAME:5000/v3/ \
  --bootstrap-region-id $REGION

# Back up original Apache configuration file if backup doesn't exist
if [ ! -f /etc/apache2/apache2.conf.bak ]; then
    sudo cp /etc/apache2/apache2.conf /etc/apache2/apache2.conf.bak
fi

# Append server name to Apache configuration file
sudo grep -qxF "ServerName $HOSTNAME" /etc/apache2/apache2.conf || sudo echo "ServerName $HOSTNAME" >> /etc/apache2/apache2.conf  

# Restart Apache
sudo systemctl restart apache2

# Create an example domain
openstack domain create --description "$DOMAIN_DESC" "$DOMAIN_NAME"

# Create service project
openstack project create --domain default --description "$SERVICE_PROJECT_DESC" "$SERVICE_PROJECT_NAME"

# Create demo project
openstack project create --domain default --description "$DEMO_PROJECT_DESC" "$DEMO_PROJECT_NAME"

# Create demo user
openstack user create --domain default --password "$DEMO_PASS" "$DEMO_USER"
echo "Demo user password: $DEMO_PASS"

# Create demo role
openstack role create $DEMO_ROLE

# Add demo role to demo project
openstack role add --project $DEMO_PROJECT_NAME --user $DEMO_USER $DEMO_ROLE